{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","id","email","className","alt","src","CardList","robots","map","user","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","useState","setRobots","searchField","setSearchField","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","toLocaleLowerCase","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAYeA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BJ,EAA1B,mBACrB,gCACE,6BAAKD,IACL,4BAAIE,WCcGI,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAElB,OACE,8BACGA,EAAOC,KAAI,SAACC,GACX,OACE,cAAC,EAAD,CAEER,GAAIQ,EAAKR,GACTD,KAAMS,EAAKT,KACXE,MAAOO,EAAKP,OAHPO,EAAKR,UCIPS,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKR,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVS,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCGHI,EAVA,SAACC,GACd,OACE,qBACEC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SADlE,SAGGJ,EAAMK,Y,4BCiBEC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IAEDO,MAAQ,CAAEC,UAAU,GAHX,E,8DAMAC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAGG,KAAKJ,MAAMC,SACH,2DAGJG,KAAKX,MAAMK,a,GAhBEQ,aCwCbC,G,MAnCH,WAAO,IAAD,EAEYC,mBAAS,IAFrB,mBAETxB,EAFS,KAEDyB,EAFC,OAGsBD,mBAAS,IAH/B,mBAGTE,EAHS,KAGIC,EAHJ,KAKhBC,qBAAW,WACTC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAWR,EAAWQ,QAC7B,IAEH,IAIMC,EAAiBlC,EAAOmC,QAAO,SAACC,GACpC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASZ,EAAYa,wBAGvD,OAAQvC,EAAOwC,OAGb,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWQ,aAbQ,SAACqC,GACtBd,EAAec,EAAMC,OAAOC,UAa1B,cAAC,EAAD,UACE,cAAC,EAAD,UACG,cAAC,EAAD,CAAU3C,OAAQkC,WAPzB,2CCfWU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b64b93bf.chunk.js","sourcesContent":["const Card = ({ name, id, email }) => {\r\n  return (\r\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img alt=\"rebots\" src={`https://robohash.org/${id}?size=200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n  return (\r\n    <div>\r\n      {robots.map((user) => {\r\n        return (\r\n          <Card\r\n            key={user.id}\r\n            id={user.id}\r\n            name={user.name}\r\n            email={user.email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","const SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"Search Robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","const Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{ overflow: \"scroll\", border: \"5px solid black\", height: \"500px\" }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = { hasError: false};\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oooops. That is not good!</h1>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n};\r\n\r\nexport default ErrorBoundary;","import { useEffect, useState } from \"react\";\r\nimport CardList from \"../Components/CardList\";\r\nimport SearchBox from \"../Components/SearchBox\";\r\nimport Scroll from \"../Components/Scroll\";\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n\r\n  const [robots, setRobots] = useState([]);\r\n  const [searchField, setSearchField] = useState('');\r\n\r\n  useEffect( () =>{\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => setRobots( users ));\r\n  }, []);\r\n  \r\n  const onSearchChange = (event) => {\r\n    setSearchField(event.target.value);\r\n  };\r\n\r\n  const filteredRobots = robots.filter((robot) => {\r\n    return robot.name.toLowerCase().includes(searchField.toLocaleLowerCase());\r\n  });\r\n\r\n  return !robots.length ? (\r\n    <h1>Loading</h1>\r\n  ) : (\r\n    <div className=\"tc\">\r\n      <h1 className=\"f1\">RoboFriends</h1>\r\n      <SearchBox searchChange={onSearchChange} />\r\n      <Scroll>\r\n        <ErrorBoundary>\r\n           <CardList robots={filteredRobots} />\r\n        </ErrorBoundary>\r\n      </Scroll>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Containers/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"tachyons\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div>\r\n      <App />\r\n    </div>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}